<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="229450" started-at="2014-11-24T13:57:04Z" finished-at="2014-11-24T14:00:54Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="229450" started-at="2014-11-24T13:57:04Z" finished-at="2014-11-24T14:00:54Z">
      <class name="Tests.WhenUserLoginToApplication">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="setUp" is-config="true" duration-ms="57044" started-at="2014-11-24T14:57:04Z" finished-at="2014-11-24T14:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ShouldDisplayNameDateAndResponceButton()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ShouldDisplayNameDateAndResponceButton" duration-ms="18911" started-at="2014-11-24T14:58:01Z" finished-at="2014-11-24T14:58:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldDisplayNameDateAndResponceButton -->
        <test-method status="PASS" signature="BackToWallPage()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="BackToWallPage" is-config="true" duration-ms="7748" started-at="2014-11-24T14:58:22Z" finished-at="2014-11-24T14:58:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BackToWallPage -->
        <test-method status="PASS" signature="ScreenshotWhenFail(org.testng.ITestResult)[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ScreenshotWhenFail" is-config="true" duration-ms="2" started-at="2014-11-24T14:58:29Z" finished-at="2014-11-24T14:58:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ShouldDisplayNameDateAndResponceButton status=SUCCESS method=WhenUserLoginToApplication.ShouldDisplayNameDateAndResponceButton()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenshotWhenFail -->
        <test-method status="PASS" signature="ShouldDisplayShareProfileAndNotificationButton()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ShouldDisplayShareProfileAndNotificationButton" duration-ms="24658" started-at="2014-11-24T14:58:29Z" finished-at="2014-11-24T14:58:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldDisplayShareProfileAndNotificationButton -->
        <test-method status="PASS" signature="BackToWallPage()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="BackToWallPage" is-config="true" duration-ms="8283" started-at="2014-11-24T14:58:55Z" finished-at="2014-11-24T14:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BackToWallPage -->
        <test-method status="PASS" signature="ScreenshotWhenFail(org.testng.ITestResult)[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ScreenshotWhenFail" is-config="true" duration-ms="1" started-at="2014-11-24T14:59:03Z" finished-at="2014-11-24T14:59:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ShouldDisplayShareProfileAndNotificationButton status=SUCCESS method=WhenUserLoginToApplication.ShouldDisplayShareProfileAndNotificationButton()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenshotWhenFail -->
        <test-method status="FAIL" signature="ShouldGoToAddShareDialog()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ShouldGoToAddShareDialog" duration-ms="20240" started-at="2014-11-24T14:59:03Z" finished-at="2014-11-24T14:59:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Can not see TextMessage in dialog expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Can not see TextMessage in dialog expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Tests.WhenUserLoginToApplication.ShouldGoToAddShareDialog(WhenUserLoginToApplication.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldGoToAddShareDialog -->
        <test-method status="PASS" signature="BackToWallPage()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="BackToWallPage" is-config="true" duration-ms="8313" started-at="2014-11-24T14:59:24Z" finished-at="2014-11-24T14:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BackToWallPage -->
        <test-method status="PASS" signature="ScreenshotWhenFail(org.testng.ITestResult)[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ScreenshotWhenFail" is-config="true" duration-ms="3408" started-at="2014-11-24T14:59:32Z" finished-at="2014-11-24T14:59:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ShouldGoToAddShareDialog status=FAILURE method=WhenUserLoginToApplication.ShouldGoToAddShareDialog()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenshotWhenFail -->
        <test-method status="PASS" signature="ShouldGoToFilterFeedView()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ShouldGoToFilterFeedView" duration-ms="11144" started-at="2014-11-24T14:59:36Z" finished-at="2014-11-24T14:59:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldGoToFilterFeedView -->
        <test-method status="PASS" signature="BackToWallPage()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="BackToWallPage" is-config="true" duration-ms="16988" started-at="2014-11-24T14:59:48Z" finished-at="2014-11-24T15:00:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BackToWallPage -->
        <test-method status="PASS" signature="ScreenshotWhenFail(org.testng.ITestResult)[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ScreenshotWhenFail" is-config="true" duration-ms="0" started-at="2014-11-24T15:00:05Z" finished-at="2014-11-24T15:00:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ShouldGoToFilterFeedView status=SUCCESS method=WhenUserLoginToApplication.ShouldGoToFilterFeedView()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenshotWhenFail -->
        <test-method status="PASS" signature="ShouldGoToNotificationView()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ShouldGoToNotificationView" duration-ms="4965" started-at="2014-11-24T15:00:05Z" finished-at="2014-11-24T15:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldGoToNotificationView -->
        <test-method status="PASS" signature="BackToWallPage()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="BackToWallPage" is-config="true" duration-ms="17321" started-at="2014-11-24T15:00:11Z" finished-at="2014-11-24T15:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BackToWallPage -->
        <test-method status="PASS" signature="ScreenshotWhenFail(org.testng.ITestResult)[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ScreenshotWhenFail" is-config="true" duration-ms="1" started-at="2014-11-24T15:00:28Z" finished-at="2014-11-24T15:00:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ShouldGoToNotificationView status=SUCCESS method=WhenUserLoginToApplication.ShouldGoToNotificationView()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenshotWhenFail -->
        <test-method status="FAIL" signature="ShouldGoToYourProfileView()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ShouldGoToYourProfileView" duration-ms="12615" started-at="2014-11-24T15:00:28Z" finished-at="2014-11-24T15:00:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Can not see Edit buton expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Can not see Edit buton expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Tests.WhenUserLoginToApplication.ShouldGoToYourProfileView(WhenUserLoginToApplication.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShouldGoToYourProfileView -->
        <test-method status="PASS" signature="BackToWallPage()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="BackToWallPage" is-config="true" duration-ms="8249" started-at="2014-11-24T15:00:41Z" finished-at="2014-11-24T15:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BackToWallPage -->
        <test-method status="PASS" signature="ScreenshotWhenFail(org.testng.ITestResult)[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="ScreenshotWhenFail" is-config="true" duration-ms="3202" started-at="2014-11-24T15:00:49Z" finished-at="2014-11-24T15:00:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ShouldGoToYourProfileView status=FAILURE method=WhenUserLoginToApplication.ShouldGoToYourProfileView()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenshotWhenFail -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Tests.WhenUserLoginToApplication@41604212]" name="tearDown" is-config="true" duration-ms="1087" started-at="2014-11-24T15:00:53Z" finished-at="2014-11-24T15:00:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.WhenUserLoginToApplication -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
